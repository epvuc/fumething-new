make measurement_task() use the global configuration var "interval" for its timing.

use dest_ip and dest_port for the udp report target in network.c
	read values from NVS on startup
	if there are none, set them to the built-in defaults
	if changed via web api, write them to NVS and reboot

make the api return current data in json and implement changing the config values

add api call to turn onboard LED on and off

read the button on the board on power up and wipe wifi config if it's held down
	so you can re-provision

	on button press, it disconnects wifi, frees mdns, sets inet_online false, and
	starts the provisioning; when it succeeds, it generates the same events as when
	it first connects with stored credentials on boot, and things start up normally
	yay. 


add task watchdog to the hardware thread
